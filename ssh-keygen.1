.\"	$OpenBSD: ssh-keygen.1,v 1.125 2015/02/24 15:24:05 naddy Exp $
.\"
.\" Author: Tatu Ylonen <ylo@cs.hut.fi>
.\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland
.\"                    All rights reserved
.\"
.\" As far as I am concerned, the code I have written for this software
.\" can be used freely for any purpose.  Any derived versions of this
.\" software must be clearly marked as such, and if the derived work is
.\" incompatible with the protocol description in the RFC file, it must be
.\" called by a name other than "ssh" or "Secure Shell".
.\"
.\"
.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" Japanese translation by Yusuke Shinyama <yusuke at cs . nyu . edu>
.\"
.Dd $Mdocdate: February 24 2015 $
.Dt SSH-KEYGEN 1
.Os
.Sh 名前
.Nm ssh-keygen
.Nd 認証用の鍵を生成、管理、および変換する
.Sh 書式
.Bk -words
.Nm ssh-keygen
.Op Fl q
.Op Fl b Ar ビット数
.Op Fl t Cm dsa | ecdsa | ed25519 | rsa | rsa1
.Op Fl N Ar 新しいパスフレーズ
.Op Fl C Ar コメント (訳注: SSH1 のみ)
.Op Fl f Ar 出力先identityファイル
.Pp
.Nm ssh-keygen
.Fl p
.Op Fl P Ar 古いパスフレーズ
.Op Fl N Ar 新しいパスフレーズ
.Op Fl f Ar パスフレーズを変更するidentityファイル
.Pp
.Nm ssh-keygen
.Fl i
.Op Fl m Ar 鍵の形式
.Op Fl f Ar 変換するidentityファイル
.Pp
.Nm ssh-keygen
.Fl e
.Op Fl m Ar 鍵の形式
.Op Fl f Ar 変換するidentityファイル
.Pp
.Nm ssh-keygen
.Fl y
.Op Fl f Ar identityファイル
.Pp
.Nm ssh-keygen
.Fl c
.Op Fl P Ar パスフレーズ
.Op Fl C Ar コメント
.Op Fl f Ar コメントを変更するidentityファイル
.Pp
.Nm ssh-keygen
.Fl l
.Op Fl v
.Op Fl E Ar 鍵の指紋ハッシュ
.Op Fl f Ar 指紋を表示するidentityファイル
.Pp
.Nm ssh-keygen
.Fl B
.Op Fl f Ar ダイジェストを表示するidentityファイル
.Pp
.Nm ssh-keygen
.Fl D Ar pkcs11
.Pp
.Nm ssh-keygen
.Fl F Ar ホスト名
.Op Fl f Ar known_hostsファイル
.Op Fl l
.Pp
.Nm ssh-keygen
.Fl H
.Op Fl f Ar known_hostsファイル
.Pp
.Nm ssh-keygen
.Fl R Ar ホスト名
.Op Fl f Ar known_hostsファイル
.Pp
.Nm ssh-keygen
.Fl r Ar ホスト名
.Op Fl f Ar 入力するidentityファイル
.Op Fl g
.Pp
.Nm ssh-keygen
.Fl G Ar 出力ファイル
.Op Fl v
.Op Fl b Ar ビット数
.Op Fl M Ar 使用メモリ量
.Op Fl S Ar 開始位置
.Pp
.Nm ssh-keygen
.Fl T Ar 出力ファイル
.Fl f Ar 入力ファイル
.Op Fl v
.Op Fl a Ar ラウンド数
.Op Fl J Ar 行数
.Op Fl j Ar 開始行
.Op Fl K Ar チェックポイント
.Op Fl W Ar ジェネレータ
.Pp
.Nm ssh-keygen
.Fl s Ar CA鍵
.Fl I Ar 証明書の秘密鍵
.Op Fl h
.Op Fl n Ar principal
.Op Fl O Ar オプション
.Op Fl V Ar 有効期間
.Op Fl z Ar シリアル番号
.Ar
.Pp
.Nm ssh-keygen
.Fl L
.Op Fl f Ar 入力する鍵ファイル
.Nm ssh-keygen
.Fl A
.Nm ssh-keygen
.Fl k
.Fl f Ar KRLファイル
.Op Fl u
.Op Fl s Ar ca_public
.Op Fl z Ar version_number
.Ar
.Nm ssh-keygen
.Fl Q
.Fl f Ar KRLファイル
.Ar
.Ek
.Sh 説明
.Nm
は
.Xr ssh 1
で認証に使う鍵を生成、管理および変換します。
.Nm
は SSH プロトコル バージョン 1 で使われる RSA 鍵と、
SSH プロトコル バージョン 2 で使われる DSA 鍵、ECDSA 鍵、Ed25519 鍵 
および RSA 鍵を生成できます。
生成する鍵の種類は
.Fl t
オプションによって指定できます。
この指定がない場合、
.Nm
は SSH プロトコル バージョン 2 で使われる RSA 鍵を生成します。
.Pp
.Nm
は Diffie-Hellman 群交換 (DH-GEX) で使われる群を生成するのにも使用します。
詳しくは、
.Sx 係数 (modulus) の生成
の項を参照してください。
.Pp
最後に、
.Nm
は鍵失効リスト (Key Revocation List, KRL) を
生成したり、与えられた鍵は revoke されたものかどうかを
検査するのに使うことができます。
詳しくは、
.Sx 鍵失効リスト
を参照してください。
.Pp
ふつう、公開鍵認証で SSH を使いたいユーザは、
一度このプログラムを実行すれば
.Pa ~/.ssh/identity ,
.Pa ~/.ssh/id_dsa ,
.Pa ~/.ssh/id_ecdsa ,
.Pa ~/.ssh/id_ed25519
または
.Pa ~/.ssh/id_rsa
に鍵 (identity ファイル) を作ることができます。また
.Pa /etc/rc
などで見られるように、
システム管理者がホスト鍵を生成するためにこのプログラムを
使うこともできます。
.Pp
通常、このプログラムは鍵を生成したあと、その鍵 (identity) をどのファイルに
格納すればよいのか尋ねます。公開鍵は、秘密鍵を含む identity 
ファイルの名前に
.Dq .pub
をつけた名前のファイルとして格納されます。またこのプログラムは
パスフレーズも尋ねてきます。
任意の長さの文字列をパスフレーズとして使用することができます。
パスフレーズをつけないときには、これは空でもかまいません
(ホスト鍵のパスフレーズは必ず空でなければいけません)。
パスフレーズはパスワードに似ていますが、パスワードとは違って
単語の列や句読点、数値、空白など、好きな文字を含めることができます。
よいパスフレーズとは、10〜30 文字程度の長さで、簡単な文章や容易に
推測できるものではないことです (英語の散文では 1 文字あたりのエントロピーは
わずか 1〜2 ビットしかなく、パスフレーズとしては非常に望ましくありません)。
また大文字と小文字が混じっているものがよいでしょう。
パスフレーズは
.Fl p
オプションによって、後から変更することもできます。
.Pp
失われてしまったパスフレーズをもとに戻すことはできません。
もしパスフレーズを忘れてしまったり、なくしてしまったときには、
新しい鍵を生成してその公開鍵を別のマシンにコピーしなくてはならないでしょう。
.Pp
RSA1 鍵 (訳注: SSH1 で使う鍵) の場合、
鍵のファイルにはコメントフィールドがあります。これはユーザが
鍵を区別するためだけに便宜的に用意されているものです
(訳注: SSH2 の鍵にはコメントはありません)。コメントには
鍵の用途やその他有用な情報を書いておくことができます。
最初に鍵が作られるとき、コメントは
.Dq user@host
の形に初期化されますが、
.Fl c
オプションを使えば変更することができます。
.Pp
鍵を生成したあと、それを使用可能にするために
どこに置けばよいかは後で説明しています。
.Pp
オプションには次のようなものがあります:
.Bl -tag -width Ds
.It Fl A
鍵の各種類 (rsa1, rsa, dsa, ecdsa および ed25519) に対して、
その種類のホスト鍵が存在しない場合には、
空のパスフレーズとデフォルトのビット数、デフォルトのコメントをもつ
ホスト鍵をデフォルトのパス名に生成します。
これは
.Pa /etc/rc
が新しいホスト鍵を生成するときに使います。
.It Fl a Ar ラウンド数
新しい形式の秘密鍵 (Ed25519 鍵や 
.Fl o
オプションを使ったときの SSH プロトコル 2 の鍵) を保存する場合、
このオプションは KDF (key derivation function) ラウンドの数を指定します。
大きな数値にするとパスワード検証にそれだけ時間がかかるようになり、
(キーが盗まれたときの) 総当たりのパスワード推測をやりにくくします。
.Pp
.Fl T
コマンドを使って DH-GEX 群の候補をスクリーニングする場合は、
このオプションは素数判定テストをおこなう回数を指定します。
.It Fl B
指定された秘密鍵あるいは公開鍵ファイルの bubblebabble ダイジェストを表示します。
.It Fl b Ar ビット数
生成する鍵のビット数を指定します。
RSA 鍵の場合、最小のサイズは 768 ビットであり、デフォルトは 2048 ビットです。
ふつうは 2048 ビットの鍵で充分だと考えられています。
DSA 鍵の場合、FIPS 186-2 の規定によりサイズは正確に 1024 ビットでなければなりません。
ECDSA 鍵の場合、
.Fl b
オプションは楕円曲線の大きさを次の3種類の中から選ぶことによって
鍵の長さを指定します: 256、384 あるいは 521 ビット。
これら以外の値を指定しようとした場合は失敗します。
Ed25519 鍵は固定長であり、
.Fl b
オプションは無視されます。
.It Fl C Ar コメント
新しいコメントを追加します。
.It Fl c
秘密鍵ファイルおよび公開鍵ファイルのコメントを変更します。
このオプションは プロトコル バージョン 1 における RSA 鍵に対してのみ有効です。
まず秘密鍵の入っているファイル名を訊かれ、
パスフレーズがあればそれを入力したあとに新しいコメントを入力します。
.It Fl D Ar pkcs11
ここで指定する PKCS#11 共有ライブラリ
.Ar pkcs11
に格納されている RSA 公開鍵を読み込みます。
.Fl s
と一緒に使用された場合、
このオプションは CA 鍵が PKCS#11 トークン中に格納されていることを指定します。
(詳しくは
.Sx 証明書
のセクションをごらんください)
.It Fl E Ar 鍵の指紋ハッシュ
鍵の指紋を表示するさいに使われるハッシュ関数のアルゴリズムを指定します。
とりうる値は:
.Dq md5
または
.Dq sha256
です。デフォルトでは
.Dq sha256
になっています。
.It Fl e
このオプションは OpenSSH 形式の秘密鍵あるいは公開鍵ファイルを
読み、
.Fl m
オプションで指定された形式で標準出力に表示します。
デフォルトの形式は
.Dq RFC4716
です。
このオプションを使うと、OpenSSH の鍵を
いくつかの商用 SSH 実装で使われている形式の鍵に変換できます。
.It Fl F Ar ホスト名
指定された
.Ar ホスト名
を
.Pa known_hosts
ファイルの中から探し、見つかったものを一覧表示します。
このオプションはハッシュされたホスト名あるいは IP アドレスを見つけるのに有用です。
また、
.Fl H
オプションと組み合わせてハッシュされた形式の公開鍵を表示するのにも使えます。
.It Fl f Ar ファイル名
鍵を格納するファイル名を指定します。
.It Fl G Ar 出力ファイル名
DH-GEX のための素数候補を生成します。
これらの素数は安全性のため (
.Fl T
オプションを使って) 実際の使用前にスクリーニングする必要があります。
.It Fl g
.Fl r
コマンドを使って指紋のレコードを表示する際に、
Generic DNS 形式を使用します。
.It Fl H
.Pa known_hosts
ファイルをハッシュし、その結果を標準出力に表示します。
これはすべてのホスト名および IP アドレスをハッシュされた表現で置き換え、
そのファイルを更新します。古いファイルはサフィックス .old がついた名前で
保存されます。
.Nm ssh
および
.Nm sshd
は、これらのハッシュ表現を普通に扱うことができますが、
これによって、たとえファイルの内容が見えても
識別可能な情報が明らかになることはありません。
このオプションはすでに存在するハッシュされたホスト名を修正することはしないため、
ハッシュされた表現とハッシュされていない表現が混在したファイルに対して
このオプションを適用しても安全です。
.It Fl h
鍵に署名するさい、ユーザ証明書のかわりにホスト証明書を作成します。
詳しくは、
.Sx 証明書
のセクションをごらんください。
.It Fl I Ar 証明書の秘密鍵
公開鍵に署名するさいに使用する鍵を指定します。
詳しくは、
.Sx 証明書
のセクションをごらんください。
.It Fl i
このオプションは、暗号化されていない秘密鍵 (あるいは公開鍵) ファイルを読み、
それを OpenSSH 互換の秘密鍵 (あるいは公開鍵) に変換して
標準出力に表示します。鍵の形式は
.Fl m
オプションによって指定されます。
このオプションを使うと、いくつかの商用 SSH 実装をふくむ
他のソフトウェアから鍵を取り込むことができます。
デフォルトの形式は
.Dq RFC4716
です。
.It Fl J Ar 行数
.Fl T
オプションを使って DH 群交換のためのスクリーニングをするさい、
ここで指定された行数のみを処理します。
.It Fl j Ar 開始行
.Fl T
オプションを使って DH 群交換のためのスクリーニングをするさい、
指定された行から処理を開始します。
.It Fl K Ar チェックポイント
.Fl T
オプションを使って DH 群交換のためのスクリーニングをするさい、
最後の行を
.Ar チェックポイント
に書き出します。
このオプションは、ジョブが再開されたときにすでに処理されている
入力ファイルの行をスキップするために使用されます。
.It Fl k
KRL ファイルを生成します。
このモードでは、
.Nm
は
.Fl f
オプションで指定された位置に KRL ファイルを生成します。
これは、コマンドラインから指定されたすべての鍵または証明証を失効させます。
失効させる鍵および証明書は公開鍵ファイルか、あるいは
.Sx 鍵失効リスト
の項で記述されている形式で指定できます。
.It Fl L
証明書の内容を表示します。
.It Fl l
指定された秘密鍵ファイルあるいは公開鍵ファイルの
指紋 (fingerprint) を表示します。プロトコル バージョン 1 における
RSA 鍵 (RSA1) もサポートされています。
プロトコル バージョン 2 の RSA および DSA 鍵の場合、
.Nm
はそれに該当する公開鍵ファイルを探し出してその指紋を表示します。
.Fl v
オプションがつけられた場合、
その鍵の指紋を表現したアスキーアートも表示します。
.It Fl M Ar メモリ
DH-GEX のモジュロとなる素数候補を生成する際の
メモリ消費量を (メガバイト単位で) 指定します。
.It Fl m Ar 鍵の形式
鍵を変換する
.Fl i
オプション (import) あるいは
.Fl e
オプション (export) で使われる鍵の形式を指定します。
サポートされている形式は:
.Dq RFC4716
(RFC 4716/SSH2 の公開鍵あるいは秘密鍵)、
.Dq PKCS8
(PEM PKCS8 の公開鍵)
あるいは
.Dq PEM
(PEM の公開鍵) です。
デフォルトの形式は、
.Dq RFC4716 
になっています。
.It Fl N Ar 新しいパスフレーズ
新しいパスフレーズを指定します。
.It Fl n Ar principal
鍵に署名する際に証明書に含める、ひとつあるいは複数の
principal (ユーザまたはホスト名) を指定します。
複数の principal を指定する場合はカンマで区切ります。
詳しくは、
.Sx 証明書
のセクションをごらんください。
.It Fl O Ar オプション
鍵を署名する際に使う証明書のオプションを指定します。
このオプションは複数回、指定することができます。
詳しくは、
.Sx 証明書
のセクションをごらんください。
.Pp
ユーザ証明書に対して有効なオプション:
.Bl -tag -width Ds
.It Ic clear
すべての許可されたパーミッションを削除します。
このオプションは、デフォルトで指定されているパーミッションを解除し、
個別に指定するさいに使われます。
.It Ic force-command Ns = Ns Ar コマンド
この証明書を使って認証した際に、
シェルやユーザが指定したコマンドではなく、
ここで指定した
.Ar コマンド
を強制的に実行させます。
.It Ic no-agent-forwarding
認証エージェント
.Xr ssh-agent 1
の転送を禁止します
(デフォルトでは許可されています)。
.It Ic no-port-forwarding
ポート転送を禁止します 
(デフォルトでは許可されています)。
.It Ic no-pty
PTYの割り当てを禁止します
(デフォルトでは許可されています)。
.It Ic no-user-rc
.Xr sshd 8
による
.Pa ~/.ssh/rc
の実行を禁止します。
(デフォルトでは許可されています)。
.It Ic no-x11-forwarding
X11転送を禁止します
(デフォルトでは許可されています)。
.It Ic permit-agent-forwarding
認証エージェント
.Xr ssh-agent 1
の転送を許可します。
.It Ic permit-port-forwarding
ポート転送を許可します。
.It Ic permit-pty
PTR の割り当てを許可します。
.It Ic permit-user-rc
.Xr sshd 8
による
.Pa ~/.ssh/rc
の実行を許可します。
.It Ic permit-x11-forwarding
X11転送を許可します。
.It Ic source-address Ns = Ns Ar アドレス一覧
この証明書が有効であると判断される接続元アドレスを制限します。
.Ar アドレス一覧
には、カンマで区切られたひとつあるいは複数の address/netmask 対を
CIDR形式で記述します。
.El
.Pp
現在のところ、ホスト鍵に対して有効なオプションはありません。
.It Fl o
.Nm
が SSH プロトコル バージョン 2 の秘密鍵を保存するさいに、
互換性の高い PEM 形式ではなく、OpenSSH 独自の新形式を利用します。
この新しい形式は、総当たりによるパスワード推測をやりにくくしますが、
バージョン 6.5 以前の OpenSSH ではサポートされていません。
Ed25519 鍵はつねにこの新しい形式で保存されます。
.It Fl P Ar パスフレーズ
(古い) パスフレーズを指定します。
.It Fl p
新しく秘密鍵をつくるのではなく、すでにある秘密鍵ファイルのパス
フレーズを変更します。まず秘密鍵の入っているファイルを訊かれ、
古いパスフレーズを入力したあと、新しいパスワードを 2 回入力します。
.It Fl Q
鍵が KRL で失効したものとして指定されているかどうかを検査します。
.It Fl q
静かな
.Nm
。
.It Fl R Ar ホスト名
.Pa known_hosts
ファイルから、指定された
.Ar ホスト名
に属する鍵をすべて取り除きます。
このオプションはハッシュされたホスト (上記の
.Fl H
オプションを参照) をファイルから取り除くのに有用です。
.It Fl r Ar ホスト名
指定された公開鍵に対する
.Ar ホスト名
の SSHFP fingerprint 資源レコードを表示します。
.It Fl S Ar 開始点
DH-GEX のモジュロとなる素数候補を生成する際の開始点を (16 進で) 指定します。
.It Fl s Ar CA鍵
指定された CAの鍵を用いて公開鍵に署名 (証明) します。
詳しくは、
.Sx 証明書
のセクションをごらんください。
.Pp
KRL を生成する場合、
失効させる証明書の鍵IDまたはシリアル番号を直接指定する場合は、
.Fl s
で CA の公開鍵へのパス名を指定します。
詳しくは、
.Sx 鍵失効リスト
をご覧ください。
.It Fl T Ar 出力ファイル
(
.Fl G
オプションで生成された) DH 群交換のための素数候補に対して、
安全性の試験をおこないます。
.It Fl t Cm dsa | ecdsa | ed25519 | rsa | rsa1
生成する鍵の種類を指定します。
とりうる値として、プロトコル バージョン 1 で使う
.Dq rsa1
、およびプロトコル バージョン 2 で使う
.Dq dsa ,
.Dq ecdsa ,
.Dq ed25519
または
.Dq rsa
があります。
.It Fl u
KRL を更新します。
.Fl k 
オプションと組み合わせて使用すると、新規に KRL を作成するのではなく、
コマンドラインで指定された鍵が既存の KRL に追加されます。
.It Fl V Ar 有効期間
証明書に署名するときの有効期間を指定します。
有効期間には単一の日時が指定されていることがあり、この場合、
その証明書が現在からある特定の日時まで有効であることを示しています。
また、有効期間としてコロンで区切った2つの時刻が指定されている場合、
これらは証明書が有効な開始時刻と終了時刻を示しています。
開始日時は YYYYMMDD の形式で日付だけを示すか、
YYYYMMDDHHMMSS の形式で日付と時刻を示すことができます。
あるいは、マイナス記号をつけた (現在からの) 
相対的な日時を指定することもできます。
この場合は
.Xr sshd_config 5
の
「時間の表現」で解説されている形式にしたがいます。
終了日時は YYYYMMDD の日付、 YYYYMMDDHHMMSS の時刻、
あるいはプラス記号をつけた相対日時を指定することができます。
.Pp
例:
.Dq +52w1d
(現在から 52週間と 1日間のあいだ有効)
.Dq -4w:+4w
(4週間前から4週間後まで有効)
.Dq 20100101123000:20110101123000
(2010年1月1日 午後12時30分から、2011年1月1日 午後12時30分まで有効)
.Dq -1d:20110101
(昨日から2011年1月1日の午前0時まで有効)
.It Fl v
冗長表示モード。
.Nm
が進行中のデバッグメッセージを表示するようにします。
これはモジュロ生成のデバッグ時に役立ちます。
複数の
.Fl v
オプションをつけると出力が増えます。最大は 3 個です。
.It Fl W Ar ジェネレータ
DH-GEX 用の素数候補を検査するときのジェネレータを指定します。
.It Fl y
このオプションは OpenSSH 形式の秘密鍵ファイルを読み、
OpenSSH 形式の公開鍵を標準出力に表示します。
.It Fl z Ar シリアル番号
証明書に埋めこむシリアル番号を指定します。
これは、同一の CA から発行された複数の証明書を区別するのに使います。
デフォルトでは、シリアル番号はゼロになります。
.Pp
KRL を生成する場合、
.Fl z
は KRL のバージョン番号を指定するのに使われます。
.El
.Sh 係数 (modulus) の生成
.Nm
は、Diffie-Hellman 群交換 (Diffie-Hellman Group Exchange, DH-GEX) のための
群を生成するのにも使うことができます。
この群を生成するには、2 つの段階をふむ必要があります:
まず、素数の候補が生成されます。これは高速ですが、メモリを消費します。
つぎにこれらの候補が適切かどうか検査されます (このときは CPU 時間を消費します)。
.Pp
この素数の生成は
.Fl G
オプションによっておこなえます。
必要な素数の長さは、
.Fl b
オプションで指定することができます。
たとえば:
.Pp
.Dl # ssh-keygen -G moduli-2048.candidates -b 2048
.Pp
デフォルトでは、素数の探索は指定された長さの区間で
ランダムに選ばれた位置から開始されます。
この開始位置は
.Fl S
オプションによって変更することができます。
.Pp
候補となる素数の集合が生成されたあとに、
そこから適切なものをスクリーニングする必要があります。
これは
.Fl T
オプションを使っておこなえます。この場合、
.Nm
は標準入力 (あるいは
.Fl f
オプションで指定したファイル) から候補を読み込みます。
たとえば:
.Pp
.Dl # ssh-keygen -T moduli-2048 -f moduli-2048.candidates
.Pp
デフォルトでは、候補となる各素数は 100回の素数判定テストにかけられます。
この回数は、
.Fl a
オプションによって変更することができます。
DH ジェネレータの値は探索中の素数のために自動的に選ばれます。
特定のジェネレータが必要な場合は、
.Fl W
オプションによって指定することができます。
許されるジェネレータの値は 2、3 あるいは 5 です。
.Pp
最終的にスクリーニングされた DH 群は
.Pa /etc/moduli
にインストールすることができます。
注意: このファイルはある範囲のビット長の係数 (modulus) を格納しており、
この数は 2つの通信端点間で同じものである必要があります。
.Sh 証明書
.Nm
は、鍵に署名する機能をサポートしています。
これによって、ユーザあるいはホスト認証時に使うことのできる
証明書を生成することができます。
証明書は、以下のものからなっています:
公開鍵、なんらかの識別情報、0個以上の principal名
(ユーザまたはホスト名)、およびオプションの集合が、
認証局 (Certification Authority, CA) の鍵によって電子署名されます。
このようにすることで、クライアントやサーバは沢山のユーザ鍵やホスト鍵を
すべて信頼しなくても、証明書を検証する際の CA 鍵だけを
信頼すればよいことになります。
注意: OpenSSH の証明書は、
.Xr ssl 8
で使われている X.509 形式の証明書とはまったく異なる、
かなりシンプルな形式になっています。
.Pp
.Nm
では、2種類の証明書をサポートしています:
ユーザ証明書とホスト証明書です。
ユーザ証明書は、サーバに対してユーザを認証します。
これに対してホスト証明書は、サーバに対してホストを認証します。
ユーザ証明書を生成する方法:
.Pp
.Dl $ ssh-keygen -s /path/to/ca_key -I key_id /path/to/user_key.pub
.Pp
生成された証明書は、
.Pa /path/to/user_key-cert.pub 
に置かれます。
ホスト証明書を作る際には、
.Fl h
オプションが必要です:
.Pp
.Dl $ ssh-keygen -s /path/to/ca_key -I key_id -h /path/to/host_key.pub
.Pp
生成されたホスト証明書は、
.Pa /path/to/host_key-cert.pub 
に置かれます。
.Pp
.Fl D
オプションを使って、トークンのライブラリを指定することで
PKCS#11 トークン中に格納された CA鍵に署名することも可能です。
このさい、CA鍵の公開部を
.Fl s
引数で指定します:
.Pp
.Dl $ ssh-keygen -s ca_key.pub -D libpkcs11.so -I key_id host_key.pub
.Pp
いずれの場合も、
.Ar key_id
は「鍵識別子」を表しており、これはその証明書が認証に使われた際には
サーバ側にログとして残ります。
.Pp
証明書は、ある特定の principal (ユーザあるいはホスト) に対してのみ
有効なように制限することもできます。
デフォルトでは、生成された証明書はすべてのユーザおよびホストに対して有効です。
特定の principal のみに有効な証明書を作るには:
.Pp
.Dl $ ssh-keygen -s ca_key -I key_id -n user1,user2 user_key.pub
.Dl "$ ssh-keygen -s ca_key -I key_id -h -n host.domain user_key.pub"
.Pp
ユーザ証明書のこれ以外の有効性や使用条件に関する制限は、
証明書につけたオプションによって指定できます。
証明書のオプションを使うと、SSHセッション時に特定の機能を禁止できたり、
特定の接続元から提示したときのみ有効であるように設定できたり、
また特定のコマンドのみを実行させたり、といったことができます。
有効な証明書オプションについては、
.Fl O
オプションに関する上記の解説を参考にしてください。
.Pp
最後に、証明書には有効期間を定めることができます。
.Fl V
オプションを使うと、証明書の開始日時と終了日時を指定できます。
この範囲を過ぎてから提示された証明書は、無効とみなされます。
デフォルトでは、証明書は
.Ux
Epoch から遠い将来まで有効になっています。
.Pp
ユーザあるいはホスト認証時に使われる鍵と、CA の公開鍵は
.Xr sshd 8
または
.Xr ssh 1
によって信頼されている必要があります。
詳しくはこれらのコマンドのマニュアルページを参照してください。
.Sh 鍵失効リスト (Key Revocation List)
.Nm
には OpenSSH 形式の鍵失効リスト (Key Revocation List, KRL) を
管理する機能があります。これらバイナリ形式のファイルは、
失効させる (revoke する) 鍵あるいは証明書をコンパクトな形式で指定するもので、
シリアル番号によって証明書を失効させる場合、ひとつの証明書につき
わずか 1ビットほどしか使用しません。
.Pp
KRL は
.Fl k
オプションで生成することができます。
このオプションはコマンドラインから指定された
ひとつ以上のファイルを読み込み、新しい KRL を生成します。
このファイルには 1行にひとつずつ KRL 指定 (以下を参照) または
公開鍵が格納されています。
普通の公開鍵は、そのハッシュ値または中身を KRL 中で指定し、
証明書の場合はシリアル番号または (シリアル番号がゼロまたは不明な場合) 
鍵 ID で指定します。
.Pp
KRL 指定による鍵の失効では、
鍵の失効に使うレコードの種類を明示的に指定でき、
もとの完全な証明書がなくても、シリアル番号または鍵 ID によって
証明書を直接失効させるのに使うことができます。
KRL では、各行ごとに以下の形式のうちいずれかを、
それ用の情報とともにコロンで区切って指定します。
.Bl -tag -width Ds
.It Cm serial : Ar シリアル番号 Ns Op - Ns Ar シリアル番号
指定されたシリアル番号の証明書を失効させます。
シリアル番号はゼロ以外の 64ビットの値で、
10進、16進または 8進数で指定することができます。
2個のシリアル番号がハイフンで区切って指定された場合、
それはシリアル番号の範囲を表し、その間の証明書がすべて失効されます。
CA の鍵は、
.Nm
コマンドラインから
.Fl s
オプションを使って指定する必要があります。
.It Cm id : Ar 鍵ID
指定された鍵 ID 文字列をもつ証明書を失効させます。
CA の鍵は、
.Nm
コマンドラインから
.Fl s
オプションを使って指定する必要があります。
.It Cm key : Ar 公開鍵
指定した鍵を失効させます。
証明書が指定された場合、これは通常の公開鍵として失効されます。
.It Cm sha1 : Ar 公開鍵
SHA1ハッシュで指定した鍵を失効させます。
.El
.Pp
KRL は
.Fl k 
オプションに加えて、
.Fl u
オプションで更新することができます。
このオプションが指定された場合、コマンドラインで指定された鍵が
KRL にマージされ、すでにある鍵に追加されます。
.Pp
KRL を指定して、ある鍵が失効されているかどうかを検査することも可能です。
.Fl Q
オプションは、すでに存在する KRL に対して、
コマンドラインから指定された各鍵を検査します。
もしコマンドライン中のいずれかの鍵が失効している場合 (あるいはエラーの場合)
.Nm
はゼロ以外の終了状態を返します。
終了状態ゼロは、どの鍵も失効していない場合にのみ返されます。
.Sh 関連ファイル
.Bl -tag -width Ds -compact
.It Pa ~/.ssh/identity
そのユーザの、プロトコル バージョン 1 における
RSA 認証用の秘密鍵を格納します。このファイルはその
ユーザ以外の誰にも見せてはいけません。この鍵を生成するときに
パスフレーズを指定することもできます。パスフレーズは、3DES を使って
ファイル中の秘密鍵の部分を暗号化するのに用いられます。このファイルは
.Nm
によって自動的にアクセスされるわけではありませんが、
秘密鍵ファイルのデフォルトの名前としてこれが提案されます。
.Xr ssh 1
はログイン要求があった際にこのファイルを読み込みます。
.Pp
.It Pa ~/.ssh/identity.pub
プロトコル バージョン 1 における RSA 認証用の公開鍵を格納します。
そのユーザが RSA 認証でログインしたいすべてのマシンの
.Pa ~/.ssh/authorized_keys
にこのファイルの内容を追加しておいてください。
このファイルの内容を秘密にしておく必要はありません。
.It Pa ~/.ssh/id_dsa
.It Pa ~/.ssh/id_ecdsa
.It Pa ~/.ssh/id_ed25519
.It Pa ~/.ssh/id_rsa
そのユーザの、プロトコル バージョン 2 における
DSA、ECDSA、Ed25519 あるいは RSA 認証用の秘密鍵を格納します。
このファイルはそのユーザ以外の誰にも見せてはいけません。
この鍵を生成するときにパスフレーズを指定することもできます。
パスフレーズは、128-bit AES を使ってファイル中の秘密鍵の部分を暗号化するのに用いられます。
このファイルは
.Nm
によって自動的にアクセスされるわけではありませんが、
秘密鍵ファイルのデフォルトの名前としてこれが提案されます。
.Xr ssh 1
はログイン要求があった際にこのファイルを読み込みます。
.Pp
.It Pa ~/.ssh/id_dsa.pub
.It Pa ~/.ssh/id_ecdsa.pub
.It Pa ~/.ssh/id_ed25519.pub
.It Pa ~/.ssh/id_rsa.pub
プロトコル バージョン 2 における 
DSA、ECDSA、Ed25519 あるいは RSA 認証用の公開鍵を格納します。
そのユーザが RSA 認証でログインしたいすべてのマシンの
.Pa ~/.ssh/authorized_keys
にこのファイルの内容を追加しておいてください。
このファイルの内容を秘密にしておく必要はありません。
.Pp
.It Pa /etc/moduli
DH-GEX で使われる Diffie-Hellman 群を格納します。
このファイル形式については、
.Xr moduli 5
を参照してください。
.El
.Sh 関連項目
.Xr ssh 1 ,
.Xr ssh-add 1 ,
.Xr ssh-agent 1 ,
.Xr moduli 5 ,
.Xr sshd 8
.Rs
.%R RFC 4716
.%T "The Secure Shell (SSH) Public Key File Format"
.%D 2006
.Re
.Sh 作者
OpenSSH は Tatu Ylonen による、フリーな
オリジナル版 ssh 1.2.12 リリースから派生したものです。
Aaron Campbell、 Bob Beck、 Markus Friedl、 Niels Provos、
Theo de Raadt および Dug Song が多くのバグを取り除き、
新しい機能をふたたび追加して OpenSSH をつくりました。
SSH プロトコル バージョン 1.5 および 2.0 のサポートは
Markus Friedl の貢献によるものです。
