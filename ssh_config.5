.\"
.\" Author: Tatu Ylonen <ylo@cs.hut.fi>
.\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland
.\"                    All rights reserved
.\"
.\" As far as I am concerned, the code I have written for this software
.\" can be used freely for any purpose.  Any derived versions of this
.\" software must be clearly marked as such, and if the derived work is
.\" incompatible with the protocol description in the RFC file, it must be
.\" called by a name other than "ssh" or "Secure Shell".
.\"
.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" Japanese translation by Yusuke Shinyama <yusuke at cs . nyu . edu>
.\"
.\" $OpenBSD: ssh_config.5,v 1.236 2016/07/22 07:00:46 djm Exp $
.Dd $Mdocdate: July 22 2016 $
.Dt SSH_CONFIG 5
.Os
.Sh 名前
.Nm ssh_config
.Nd OpenSSH SSH クライアント 設定ファイル
.Sh 書式
.Nm ~/.ssh/config
.Nm /etc/ssh/ssh_config
.Sh 説明
.Xr ssh 1
は以下のものから (この順序で) 設定情報を取得します:
.Pp
.Bl -enum -offset indent -compact
.It
コマンドラインオプション
.It
ユーザごとの設定ファイル
.Pq Pa ~/.ssh/config
.It
システム全体にわたる (system-wide) 設定ファイル
.Pq Pa /etc/ssh/ssh_config
.El
.Pp
各設定項目にはそれぞれ最初に見つかったものが使われます。
設定ファイルはいくつかのセクションに分かれており、これらは
.Dq Host
キーワードにより区切られています。あるセクションの設定が
適用されるのは、通常コマンドラインから与えられたホスト名が、
このキーワードで指定されているパターンのどれかにマッチするときだけです。
(例外については
.Cm CanonicalizeHostname
を参照。)
.Pp
各設定項目で最初に見つかった値が使われるので、ホストに特化した
宣言をファイルの先頭近くに置くようにし、一般的なものを後に置くのが
よいでしょう。
.Pp
設定ファイルは以下のような形式になっています:
.Pp
空行、および
.Ql \&#
で始まる行は、コメントとみなされます。
それ以外の場合、この行は
.Dq キーワード 引数
という形式になっています。
キーワードと引数は、空白またはひとつの
.Ql \&=
(間に空白を含んでいてもよい) によって区切られます。
後者の形式は、
.Nm ssh ,
.Nm scp
および
.Nm sftp
などで
.Fl o
オプションを使って設定項目を指定するときに、
空白をクォートする必要がないようにするためです。
空白を含む引数は、ダブルクォート
.Pq \&"
で囲んで表現することもできます。
.Pp
とりうるキーワードとその意味は以下のとおりです 
(キーワードは大文字小文字どちらでもかまいませんが、
その引数は大文字小文字が区別されることに注意してください) :
.Bl -tag -width Ds
.It Cm Host (ホスト)
これ以後の (次の
.Cm Host
または
.Cm Match
キーワードが現れるまでの) 設定項目を、ここで
指定されたパターンのどれかにマッチするホストだけに制限します。
複数のパターンを与える場合は、それらを空白で区切ってください。
.Ql *
は、すべてのホストに対するデフォルトとして使えます。
ここでいうホストとは、通常はコマンドライン引数で与えられた
.Ar ホスト名
そのもののことです
(例外については
.Cm CanonicalizeHostname
を参照してください。)
.Pp
パターンの前に感嘆符
.Pq Sq !\&
をつけると否定の意味になります。
否定されたパターンにマッチした場合、行中のほかのパターンが
マッチしたときでも
.Cm Host
項目は無視されます。
したがって、否定のパターンはワイルドカードに対する例外を
記述するのに有用です。
.Pp
パターン (ワイルドカード文字) についての詳細は
.Sx パターン
の項を参照してください。
.It Cm Match (マッチ)
このキーワードに続いて現れる条件が満たされた時のみ、
(次の
.Cm Host
または
.Cm Match
キーワードが現れるまで) 
以下の宣言を有効にします。
Match 指令の引数は、ひとつ以上の指定か、
あるいは常にマッチする単一の引数
.Cm all
によって与えられます。
使用可能なキーワードとして:
.Cm canonical ,
.Cm exec ,
.Cm host ,
.Cm originalhost ,
.Cm user ,
および
+.Cm localuser 
があります。
.Cm all
キーワードは単一で使われるか、あるいは
.Cm canonical 
の直後に来る必要があります。
これ以外のキーワードは任意の組み合わせが可能です。
.Cm all
および
.Cm canonical
をのぞくすべてのキーワードには、引数が必要です。
キーワードは感嘆符
.Pq Sq !\& .
を前につけることで否定することができます。
.Pp
The
.Cm canonical
キーワードは、ホスト名の正規化されたあとに
設定ファイルが再度読み込まれた時にのみマッチします。
(
.Cm CanonicalizeHostname
を参照。)
これは正規化されたホスト名のみに対して指定したい条件があるときに有用です。
.Cm exec
キーワードは、指定されたコマンドをそのユーザのシェルで実行します。
このコマンドが終了状態ゼロを返した場合、この条件は真であるとみなされます。
コマンド名が空白文字を含む場合はクォートする必要があります。
コマンド中に現れる以下の文字列シーケンスは、
コマンドの実行前に展開されます:
.Ql %L
はローカルのホスト名の最初の部分に、
.Ql %l
はローカルのホスト名 (ドメイン名がある場合はそれも含む) に、
.Ql %h
は対象のリモートホスト名に、
.Ql %n
はもとのコマンドラインで指定されたホスト名に、
.Ql %p
はポートに、
.Ql %r
はリモート側のログイン名に、
そして
.Ql %u
は
.Xr ssh 1 
を実行するユーザのログイン名に変換されます。
.Pp
これ以外のキーワードは、単一の引数かカンマで区切られたリストであり、
.Sx パターン
の項にあるワイルドカードまたは否定演算子を使うことができます。
.Cm host
キーワードの引数は
.Cm Hostname
または
.Cm CanonicalizeHostname
項目による置換後の対象ホスト名と比較されます。
.Cm originalhost
キーワードは、コマンドラインで指定されたホスト名と比較されます。
.Cm user
キーワードは、リモートホスト上の対象ユーザ名と比較されます。
.Cm localuser
キーワードは、ローカルホスト上で
.Xr ssh 1
を走らせているユーザ名と比較されます。
(このキーワードは、システム全体で
.Nm
ファイルを使用するときに有用です)
.It Cm AddKeysToAgent (エージェントに鍵を追加)
実行中の
+Specifies whether keys should be automatically added to a running
.Xr ssh-agent 1
に自動的に鍵を追加するかどうかを指定します。
この項目が
.Dq yes
に設定されている場合、鍵がファイルから読み込まれると
その鍵およびパスフレースを
.Xr ssh-add 1 
に与えるのと同じ方法で認証エージェントに追加されます。
鍵の有効時間はデフォルトの値が使われます。
この項目が
.Dq ask
に設定されている場合、
.Nm ssh
は
.Ev SSH_ASKPASS
プログラムを使って鍵を追加してよいかどうか確認します。
(詳細は
.Xr ssh-add 1
を参照)。
この項目が
.Dq confirm
に設定されている場合、
.Xr ssh-add 1
に
.Fl c
オプションを与えたのと同様に、
この鍵を使用するたびに確認をとります。
この項目が
.Dq no
に設定されている場合、鍵は認証エージェントに追加されません。
とりうる値は
.Dq yes ,
.Dq confirm ,
.Dq ask 
あるいは
.Dq no
のいずれかです。
デフォルトの値は
.Dq no 
です。
.It Cm AddressFamily (アドレスファミリ)
接続時にどのアドレスファミリを利用するかを指定します。
指定できる値は
.Dq any
、
.Dq inet
(IPv4 のみを使用する) または
.Dq inet6
(IPv6 のみを使用する) のいずれかになります。
デフォルトの値は
.Dq any 
です。
.It Cm BatchMode (バッチ処理モード)
これが
.Dq yes
に設定されていると、パスフレーズおよびパスワードの
入力を求めないようになります。この設定項目はスクリプトなどにおける
バッチ処理中で、パスワードを打ち込むユーザがいない場合に便利です。
引数の値は 
.Dq yes
あるいは
.Dq no
です。
デフォルトは
.Dq no (パスワードあるいはパスフレーズの入力を求める)
です。
.It Cm BindAddress (bind するアドレス)
ローカルマシン上で、指定されたアドレスを接続のソース側アドレスとして使用します。
この機能が有用なのは、複数のIPアドレスをもっているマシン上のみです。
この設定は
.Cm UsePrivilegedPort
項目が
.Dq yes
になってるときは機能しないので注意してください。
.It Cm CanonicalDomains (正規ドメイン)
.Cm CanonicalizeHostname
が有効な場合、この設定項目は特定の対象ホストを検索するさいに
付加されるドメインのリストを指定します。
.It Cm CanonicalizeFallbackLocal (正規化失敗時のふるまい)
ホスト名の正規化に失敗した場合、エラーとみなすかどうかを指定します。
デフォルトではこれは
.Dq yes
であり、失敗時にシステムのリゾルバを使用して
qualifyされていないホスト名で接続しようとします。
この値を
.Dq no
に指定すると、
.Cm CanonicalizeHostname
が有効な場合、対象となるホストが
.Cm CanonicalDomains 
で指定されたドメイン内に見つからなければ
.Xr ssh 1
は即座にエラーとなります。
.It Cm CanonicalizeHostname (ホスト名正規化)
明示的なホスト名の正規化をおこなうかどうかを指定します。
デフォルトでは
.Dq no 
であり、ホスト名の書き換えはおこなわず、
システムのリゾルバにすべてのホスト名解決を一任します。
この項目で
.Dq yes
を指定すると、
.Cm ProxyCommand 
を使わない接続では
.Xr ssh 1
はコマンドラインで指定されたホスト名を
.Cm CanonicalDomains
項目のサフィックスおよび
.Cm CanonicalizePermittedCNAMEs
の規則にもとづいて正規化しようとします。
.Cm CanonicalizeHostname
が
.Dq always 
に指定されている場合、ホスト名の正規化は
プロキシ経由の接続に対してもおこなわれます。
.Pp
この項目が有効の場合、設定ファイルは新しい名前を使って
もう一度読み込まれ、
.Cm Host
または
.Cm Match
節にマッチする新しい設定項目が使用されます。
.It Cm CanonicalizeMaxDots (正規化時の最大ドット数)
正規化が禁止されるまでホスト名の前に
許される最大のドット数を指定します。
デフォルトは
.Dq 1 
であり、単一のドットしか許しません (例: hostname.subdomain)。
.It Cm CanonicalizePermittedCNAMEs (正規化時のCNAMEの使用)
ホスト名を正規化する際に、CNAME に従う場合の規則を指定します。
ここでの規則は
.Ar source_domain_list : Ns Ar target_domain_list
からなるひとつ以上の引数で表されます。
.Ar source_domain_list
(もとのドメイン名のリスト) は
正規化時に CNAME に従うドメイン名のパターンのリストであり、
.Ar target_domain_list
(対象となるドメイン名のリスト) は
それが解決される先のドメイン名のパターンのリストです。
.Pp
たとえば、
.Dq *.a.example.com:*.b.example.com,*.c.example.com
は以下のホスト名マッチング
.Dq *.a.example.com
が
.Dq *.b.example.com
または
.Dq *.c.example.com
ドメインの名前に正規化できることを意味します。
.It Cm CertificateFile (証明書ファイル)
ユーザの証明書を読み込むファイルを指定します。
この証明書を使うには、これに対応する秘密鍵を
.Cm IdentityFile
設定項目か、
.Cm PKCS11Provider
または
.Xr ssh-agent 1
を経由した
.Xr ssh 1 
の 
.Fl i
オプションで別に与える必要があります。
.Pp
ファイル名にはユーザのホームディレクトリを表すのに
チルダ表記を使うことができ、他にも以下のエスケープ文字が使えます:
.Ql %d
(ローカルユーザのホームディレクトリ),
.Ql %u
(ローカルのユーザ名),
.Ql %l
(ローカルのホスト名),
.Ql %h
(リモートのホスト名) または
.Ql %r
(リモートのユーザ名)。
.Pp
設定ファイルの中で複数の証明書ファイルを指定することもできます。
その場合は、証明書が順に試されます。
複数の
.Cm CertificateFile
設定項目は認証に使う証明書の一覧に追加します。
.It Cm ChallengeResponseAuthentication (チャレンジ・レスポンス認証)
チャレンジ・レスポンス認証をおこなうかどうかを指定します。
この引数がとりうる値は
.Dq yes
あるいは
.Dq no
です。デフォルトでは
.Dq yes (チャレンジ・レスポンス認証をおこなう)
になっています。
.It Cm CheckHostIP (ホスト IP の検査)
この項目が
.Dq yes
に設定されていると、
.Xr ssh 1
は接続先ホスト名の IP アドレスが
.Pa known_hosts
に書かれている同一ホスト名 IP アドレスと同じかどうか
検査するようになります。
これによって、DNS 詐称によりホスト鍵が変えられたことを
検出でき、宛て先のホストアドレスは
.Cm StrictHostKeyChecking .
の設定にかかわらず
.Pa ~/.ssh/known_hosts
ファイルに追加されます。
この項目が
.Dq no
に設定されている場合は、この検査はおこなわれません。
デフォルトでは、これは
.Dq yes (ホスト IP アドレスの検査をおこなう)
になっています。
.It Cm Cipher (暗号方式)
プロトコル バージョン 1 のセッションで使う
暗号方式を指定します。現在のところ
.Dq blowfish 
.Dq 3des
および
.Dq des
がサポートされており、デフォルトは
.Dq 3des
です。
.Ar des
は、
.Ar 3des
暗号をサポートしていない、もはや古くなったプロトコル 1 の実装と
相互運用するためにのみサポートされています。
純粋な des 暗号は弱いため、使用はおすすめしません。
.It Cm Ciphers (複数の暗号方式)
プロトコル バージョン 2 で使う暗号方式の
優先順位を指定します。複数の暗号方式をカンマで区切って指定します。
指定された値が
.Sq +
文字から始まっている場合、この暗号方式はデフォルトの方式を
置き換えるのではなく、追加されます。
.Pp
現在のところ、サポートされている暗号方式は以下のとおりです:
.Pp
.Bl -item -compact -offset indent
.It
3des-cbc
.It
aes128-cbc
.It
aes192-cbc
.It
aes256-cbc
.It
aes128-ctr
.It
aes192-ctr
.It
aes256-ctr
.It
aes128-gcm@openssh.com
.It
aes256-gcm@openssh.com
.It
arcfour
.It
arcfour128
.It
arcfour256
.It
blowfish-cbc
.It
cast128-cbc
.It
chacha20-poly1305@openssh.com
.El
.Pp
デフォルトは:
.Bd -literal -offset indent
chacha20-poly1305@openssh.com,
aes128-ctr,aes192-ctr,aes256-ctr,
aes128-gcm@openssh.com,aes256-gcm@openssh.com,
aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc
.Ed
の順になっています。
.Pp
使用可能な暗号方式の一覧は、
.Xr ssh 1.
に対して 
.Fl Q
オプションと引数
.Dq cipher
を使用しても見ることができます。
.It Cm ClearAllForwardings (すべてのポート転送をキャンセル)
設定ファイルあるいはコマンドラインで指定された、
ローカル、リモートおよびダイナミックなポート転送をすべて
キャンセルします。この項目は設定ファイルで指定されている
ポート転送を
.Xr ssh 1
のコマンドラインで打ち消すためにあり、
.Xr scp 1
や
.Xr sftp 1
で自動的に使われます。この引数の値は
.Dq yes
あるいは
.Dq no
です。デフォルトでは
.Dq no
になっています。
.It Cm Compression (圧縮)
データ圧縮をおこなうかどうかを指定します。
引数の値は
.Dq yes
あるいは
.Dq no
です。
デフォルトでは
.Dq no (圧縮をおこなわない)
になっています。
.It Cm CompressionLevel (圧縮レベル)
圧縮をおこなう際の圧縮レベルを指定します。
この引数がとる値は
整数の 1 (速い) から 9 (遅い、高圧縮率) までです。
デフォルトの値は 6 で、ほとんどのアプリケーションにはこれで充分です。
この値の意味は
.Xr gzip 1
と同じです。
この項目はプロトコル バージョン 1 にのみ適用されることに
注意してください。
.It Cm ConnectionAttempts (接続試行回数)
接続を試みる回数 (1 秒に 1 回) を指定します。これを越えると
ssh は終了してしまいます。この値は整数で
なければなりません。これは、ときどき接続に失敗する環境での
スクリプトなどに便利です。
デフォルトは 1 回です。
.It Cm ConnectTimeout (接続タイムアウト)
SSH サーバに接続するときのタイムアウト時間を秒数で指定します。
デフォルトの TCP タイムアウト時間に代わってこの値が使われます。
この値は相手先ホストがダウンしているときか実際に到達不可能なときに使用され、
接続が拒否されたときには使用されません。
.It Cm ControlMaster (マスターかどうか)
単一のネットワーク接続で、複数のセッションを共有します。
これが
.Dq yes
に設定されている場合、
.Xr ssh 1
は
.Cm ControlPath
の引数で指定された制御用のソケットを listen します。
追加のセッションを開くには、同じソケットを
.Cm ControlPath
に指定し、
.Cm ControlMaster
には
.Dq no
を指定します (これがデフォルト)。
こうすると、そのセッションは新たにネットワーク接続するのではなく、
すでにある Master インターフェイスのネットワーク接続の再利用を試みるようになります。
ただし制御用ソケットが存在しないか、listen されていない場合は通常の接続になります。
.Pp
この値を
.Dq ask
に指定すると、
ssh は制御用のソケットを listen しますが、これを受けつける際に
.Xr ssh-askpass 1
プログラムによる確認を要求します。
もし
.Cm ControlPath
がオープンできない場合、
ssh は Master への接続なしに処理を継続します。
.Pp
X11 および
.Xr ssh-agent 1
中継は共有した接続の中でも有効ですが、
中継する X11 ディスプレイおよびエージェントは Master の接続に
所属しているものになります。つまり、複数のディスプレイやエージェントを
転送することはできません。
.Pp
このほかに、オプションとしてさらに 2 種類の方式が指定できます。
.Dq auto
または
.Dq autoask 
を使うと、これらは Master 接続が利用できないときに、
自動的に新しい接続を作ります (opportunistic multiplexing)。
この場合、後者は
.Dq ask
オプションのように、ユーザに確認を求めます。
.It Cm ControlPath (制御用パス名)
上の
.Cm ControlMaster
項目で説明されている、ネットワーク接続を共有する際の制御用ソケットのパス名を指定します。
接続の共有を禁止する場合は
.Dq none
を指定してください。
このパス名の中ではエスケープシーケンスが利用でき、その場合
.Ql %L
はローカルのホスト名の最初の部分に、
.Ql %l
はローカルのホスト名 (ドメイン名がある場合はそれも含む) に、
.Ql %h
は対象のリモートホスト名に、
.Ql %n
はもとのコマンドラインで指定されたホスト名に、
.Ql %p
は宛先のポートに、
.Ql %r
はリモート側のログイン名に、
.Ql %u
と
.Ql %i
はそれぞれ
.Xr ssh 1
実行ユーザのログイン名とユーザID (uid) の数値に、
そして
.Ql \&%C
は %l%h%p%r を連結したハッシュ値に変換されます。
Master 接続が利用できないときに自動的に新しい接続を作るよう指定した場合 
(opportunistic multiplexing)、
.Cm ControlPath
の値には少なくとも %h, %p および %r (または %C) の
エスケープシーケンスをすべて含めておき、また他のユーザには
書き込めないディレクトリ中に指定することが推奨されます。
こうすることで、共有する接続を一意に定めることができます。
.It Cm ControlPersist (制御の持続)
これは
.Cm ControlMaster 
項目と組み合わせて使います。この項目は、
最初のクライアント接続が閉じられた後でも、(以後の接続のために)
バックグラウンドで Master 接続を開いたままにするよう指示します。
この値が
.Dq no 
に設定されている場合、Master接続はバックグラウンドには移行せず、
最初のクライアントが終了した直後に閉じられます。
この値が
.Dq yes
または
.Dq 0
の場合、Master接続はバックグラウンドで永続的に
(kill されるか、
.Xr ssh 1
.Dq Fl O No exit
のような方法で閉じられるまで)
待ちつづけます。
この値として秒数を指定するか、あるいは
.Xr sshd_config 5 
で指定されている時間の形式を与えると、
バックグラウンドの接続は指定された時間だけ idle な
(クライアントが接続してこない) 状態が続いた後に
自動的に閉じられます。
.It Cm DynamicForward (動的なポート転送)
暗号化された通信路を経由して、ローカルホスト側の TCP ポートを
転送するよう指定します。このとき、どのリモートホストから
接続するかを決定するためにアプリケーションレベルのプロトコルが
使われます。
.Pp
引数の値は
.Sm off
.Oo Ar bindするアドレス : Oc Ar ポート
.Sm on
の形式です。
IPv6 アドレスは、ブラケット [ ] で囲むことにより指定します。
デフォルトでは、ローカルのポートは 
.Cm GatewayPorts
の設定にしたがって bind されますが、
.Ar bindするアドレス
を明示的に書いておくことにより、特定のアドレスに bind させることもできます。
.Ar bindするアドレス
を
.Dq localhost
にすると、listen するポートはローカル専用になり、
アドレスを指定しないか
.Sq *
にすると、ポートはすべてのネットワークインターフェイスで使用可能になります。
.Pp
今のところ SOCKS4 および SOCKS5 プロトコルが使われており、
.Xr ssh 1
は SOCKS サーバのようにふるまいます。
複数のポート転送も指定でき、コマンドラインからこれを追加することも
できます。特権ポートを転送できるのは root だけです。
.It Cm EnableSSHKeysign (ssh-keysign を使用する)
システム設定ファイル
.Pa /etc/ssh/ssh_config
でこの項目を
.Dq yes
に設定すると、
.Cm HostbasedAuthentication
の際に
.Xr ssh-keysign 8
の使用が許可されます。
引数の値は
.Dq yes
あるいは
.Dq no 
です。デフォルトは
.Dq no 
になっています。
この項目はホストに依存しない部分に記述すべきです。
詳しくは
.Xr ssh-keysign 8
を参照してください。
.It Cm EscapeChar (エスケープ文字)
エスケープ文字を設定します (デフォルトは
.Ql \&~ 
)。エスケープ文字はコマンドラインからも指定できます。
この引数には 1 つの文字か、
.Ql \&^
に 1 文字を付けたもの、あるいはエスケープ文字の使用をすべて禁止するなら
.Dq none
を指定します (これはその接続を、バイナリ
データに対して透過にすることになります)。
.It Cm ExitOnForwardFailure (転送できない場合に終了)
要求された (ローカル、リモート、トンネリング、あるいはダイナミック) 
ポート転送すべてを設定できない場合
(たとえば指定されたポートを bind または listen できない場合など)、
.Xr ssh 1
を終了すべきかどうかを指定します。
注意:
.Cm ExitOnForwardFailure
はポート転送された接続そのものに対しては適用されません。
つまり、最終的な転送先への TCP 接続が失敗しても
.Xr ssh 1
が終了することはありません。
引数は
.Dq yes
あるいは
.Dq no
のどちらかで、デフォルトは
.Dq no (転送できない場合にも終了しない)
です。
.It Cm FingerprintHash (鍵の指紋ハッシュ)
鍵の指紋を表示するさいに使われるハッシュ関数のアルゴリズムを指定します。
とりうる値は:
.Dq md5
または
.Dq sha256
です。デフォルトでは
.Dq sha256
になっています。
.It Cm ForwardAgent (エージェント転送)
認証エージェントへの接続を、(それが存在する時は) リモートマシン上に
転送するかどうかを指定します。この引数の値は
.Dq yes
あるいは
.Dq no
でなければならず、デフォルトは
.Dq no (エージェント転送をおこなわない)
です。
.Pp
認証エージェントの転送には注意が必要です。
リモートホスト上で (エージェントの UNIX ドメインソケットに対する)
ファイルアクセス権限を無視できてしまうユーザがいる場合は、
転送された接続を介してローカル側の
認証エージェントにアクセスできてしまうことになります。
攻撃側は認証エージェントから鍵そのものを盗むことはできませんが、
認証エージェントがもっている鍵に認証をおこなわせることはできます。
.It Cm ForwardX11 (X11 転送)
X11 接続を自動的に安全な通信路へリダイレクトし、
.Ev DISPLAY
を設定するかどうかを指定します。この引数の値は
.Dq yes
あるいは
.Dq no
でなければならず、デフォルトは
.Dq no (X11 接続を転送しない)
です。
.Pp
X11 の転送には注意が必要です。
リモートホスト上で (そのユーザの X11 認証のための) ファイルアクセス権限を
無視できてしまうユーザがいる場合は、転送された接続を介してローカル側の
X11 ディスプレイにアクセスできてしまうことになります。もし、
.Cm ForwardX11Trusted
項目も許可されていたとすると、
攻撃側はキーストロークを盗み見るなどの行為が可能になってしまうかもしれません。
.It Cm ForwardX11Timeout (X11転送タイムアウト)
信頼されていない X11 転送における、タイムアウトを指定します。
時間の指定方法は、
.Xr sshd_config 5 
にある
「時間の表現」セクションに書かれています。
.Xr ssh 1
が受けつける X11 接続は、この時間が過ぎたあとは拒否されます。
デフォルトでは、20分が経過すると信頼されていない X11接続は
禁止されるようになっています。
.It Cm ForwardX11Trusted (信頼された X11 転送)
この項目が
.Dq yes
の場合、リモートの X11 クライアントは元の X11 ディスプレイに対する
完全なコントロールが可能になります。
.Pp
この項目が
.Dq no
に設定されている場合、リモートの X11 クライアントは信頼できないとみなされ、
信頼された X11 クライアントに属するデータを盗み見たり改竄したりすることはできません。
さらに、このセッションで使われる
.Xr xauth 1
トークンは 20 分後に期限が切れるよう設定されており、
リモート側のクライアントは、この時間を過ぎるとアクセスを拒否されるようになります。
.Pp
デフォルトでは
.Dq no
になっています。
.Pp
信頼できないクライアントに課される制限についての完全な情報は、
X11 SECURITY 拡張機能の仕様書を参照してください。
.It Cm GatewayPorts (ポート転送の中継)
ローカルからリモートへ転送されている (リモート→ローカルのポート転送)
ポートに、他ホストからの接続を許すかどうかを指定します。
デフォルトでは、
.Xr ssh 1
は転送されたローカルポートをループバックアドレス (127.0.0.1) に
bind します。このため他の (訳注: サーバ以外の) ホストが
転送されたポートに接続することはできません。
.Cm GatewayPorts
を使うと、
ssh は転送されたローカルポートをワイルドカードアドレス (0.0.0.0) に
bind するようになります。これは他のホストもその転送されたポートに
接続できるということです。
この引数の値は
.Dq yes
または
.Dq no
で、デフォルトは
.Dq no (転送されているポートに他ホストからの接続を許可しない)
に設定されています。
.It Cm GlobalKnownHostsFile (大域的 known_host ファイル)
そのホスト全体で大域的に使用されるホスト鍵データベースファイルを空白で区切って指定します。
デフォルトは
.Pa /etc/ssh/ssh_known_hosts 
.Pa /etc/ssh/ssh_known_hosts2 
です。
.It Cm GSSAPIAuthentication (GSSAPI 認証)
GSSAPI ベースの認証をおこなうかどうかを指定します。
デフォルトの値は
.Dq no
です。
.It Cm GSSAPIDelegateCredentials (証明書の転送)
証明書 (credential) をサーバに転送 (委譲) するかどうかを指定します。
デフォルトは
.Dq no
になっています。
.It Cm HashKnownHosts (known_hostsをハッシュする)
.Xr ssh 1
が新しいホストを
.Pa ~/.ssh/known_hosts
に追加するとき、そのホスト名および IP アドレスをハッシュするよう指定します。
これらのハッシュされた名前は
.Xr ssh 1
および
.Xr sshd 8
によって使われますが、たとえこれらの情報が見られても
識別可能な情報が明らかになることはありません。
この値は、デフォルトでは
.Dq no
になっています。すでに known_hosts 中にある名前に対して、
あとからハッシュ化が適用されることはありませんが、
.Xr ssh-keygen 1
を使えばこれらも手動でハッシュすることができます。
.It Cm HostbasedAuthentication (ホストベースド認証)
ホスト間認証を使った rhosts ベースの認証をおこなうかどうかを指定します。
とりうる引数の値は
.Dq yes
または
.Dq no
で、デフォルトは
.Dq no (ホストベースド認証を試みない)
になっています。
.It Cm HostbasedKeyTypes (ホスト鍵の形式)
ホストベースド認証に使われる鍵の形式を
カンマで区切って指定します。
これ以外にも、指定された値が
.Sq +
文字から始まっている場合、指定された鍵の形式はデフォルトを
置き換えるのではなく、追加されます。
この項目に対するデフォルトの値は:
.Bd -literal -offset 3n
ecdsa-sha2-nistp256-cert-v01@openssh.com,
ecdsa-sha2-nistp384-cert-v01@openssh.com,
ecdsa-sha2-nistp521-cert-v01@openssh.com,
ssh-ed25519-cert-v01@openssh.com,
ssh-rsa-cert-v01@openssh.com,
ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
ssh-ed25519,ssh-rsa
.Ed
です。
.Pp
.Xr ssh 1
で
.Fl Q
オプションを使うと、
サポートされている鍵の形式の一覧を見ることができます。
.It Cm HostKeyAlgorithms (ホスト間認証の方式)
ホスト間認証で使われる方式を指定します。
クライアントはここで指定された
優先順位の方式を使って認証を試みます。
これ以外にも、指定された値が
.Sq +
文字から始まっている場合、指定された認証の方式はデフォルトを
置き換えるのではなく、追加されます。
この項目のデフォルトは
.Bd -literal -offset 3n
ecdsa-sha2-nistp256-cert-v01@openssh.com,
ecdsa-sha2-nistp384-cert-v01@openssh.com,
ecdsa-sha2-nistp521-cert-v01@openssh.com,
ssh-ed25519-cert-v01@openssh.com,
ssh-rsa-cert-v01@openssh.com,
ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
ssh-ed25519,ssh-rsa
.Ed
です。
.Pp
相手ホストのホスト鍵がわかっている場合、
これらのデフォルト値は相手のアルゴリズムに合うよう修正されます。
.Pp
.Xr ssh 1
の
.Fl Q
オプションに引数
.Dq key
を指定して使うと、サポートされている鍵の形式の一覧を見ることができます。
.It Cm HostKeyAlias (ホスト鍵のエイリアス)
ホスト鍵データベースからホスト鍵を検索するとき、あるいは
データベースにホスト鍵を保存するときに、実際のホスト名のかわりに
使われる名前を指定します。
この項目は SSH 接続をトンネリングしているときや、
単一のホスト上で複数の sshd サーバを動かしているときなどに
便利です。
.It Cm HostName (実際のホスト名)
実際にログインするホスト名を指定します。
デフォルトでは
.Nm
はコマンドラインで与えられたホスト名に接続しますが、
これを使うと、ホストのニックネームや省略形を使用することができます。
ホスト名の部分に
.Ql %h 
という文字列が含まれている場合、
これはコマンドラインで指定されたホスト名に置き換えられます
(これは qualify されていないホスト名を処理するときに有用です)。
文字列
.Ql %%
は単一の
.Ql %
に置き換えられます。
これは IPv6リンクローカルのアドレスを指定する時に必要になる場合があります。
.Pp
デフォルトは、コマンドラインで指定された名前になります。
数字の IP アドレスでもかまいません
(コマンドライン、
.Cm HostName
キーワードの両方とも)。
.It Cm IdentitiesOnly (ファイルに格納された秘密鍵のみを使用)
認証の際に、たとえ認証エージェント
.Xr ssh-agent 1
または
.Cm PKCS11Provider
が複数の秘密鍵を持っていた場合でも、
.Nm
ファイルか
.Xr ssh 1
のコマンドラインから明示的に指定された
秘密鍵および証明書のみを使用するよう指定します。
この引数のとりうるキーワードは
.Dq yes
または
.Dq no
です。
この項目を使うのは、ssh-agent が
多くの異なる秘密鍵を返すような状況でしょう。
デフォルトでは
.Dq no
になっています。
.It Cm IdentityAgent (認証エージェント)
認証エージェントとの通信に使う
.Ux Ns -ドメイン
ソケットを指定します。
.Pp
この設定項目は
.Dq SSH_AUTH_SOCK
環境変数で指定された値よりも優先され、特定のエージェントを選択するのに
使うことができます。
ソケットの名前に
.Dq none
を指定すると、認証エージェントの使用は禁止されます。
文字列
.Dq SSH_AUTH_SOCK
を指定すると、ソケットの場所は
.Ev SSH_AUTH_SOCK
環境変数で指定された値になります。
.Pp
ソケットの名前では、ユーザのホームディレクトリを表すのに
チルダ表記を使うことができ、他にも以下のエスケープ文字が使えます:
.Ql %d
(ローカルユーザのホームディレクトリ),
.Ql %u
(ローカルのユーザ名),
.Ql %l
(ローカルのホスト名),
.Ql %h
(リモートのホスト名) または
.Ql %r
(リモートのユーザ名)。
.It Cm IdentityFile (identity ファイル)
ユーザの DSA, ECDSA, Ed25519 または RSA 認証用 identity (秘密鍵) を
読むファイルを指定します。
デフォルトは、プロトコル バージョン 1 の場合
ユーザのホームディレクトリにある
.Pa ~/.ssh/identity
ファイルが、プロトコル バージョン 2 の場合は
.Pa ~/.ssh/id_dsa ,
.Pa ~/.ssh/id_ecdsa ,
.Pa ~/.ssh/id_ed25519
および
.Pa ~/.ssh/id_rsa
が使われます。
.Cm IdentitiesOnly
が設定されていない場合は、
これに加えて認証エージェントによって現れる identity も使われます。
証明書が
.Cm CertificateFile 
によって明示的に指定されていない場合、
.Xr ssh 1
は、
.Cm IdentityFile
で指定されるパス名に
.Pa -cert.pub
を追加した名前のファイルから、証明書に関する情報を
読み込もうとします。
.Pp
ユーザのホームディレクトリを表すのにチルダ表記や、以下の
エスケープ文字を使うこともできます:
.Ql %d
(ローカルユーザのホームディレクトリ)、
.Ql %d
(ローカルのユーザ名)、
.Ql %l
(ローカルホスト名)、
.Ql %h
(リモートホスト名)、あるいは
.Ql %r
(リモートのユーザ名)。
.Pp
設定ファイルでは複数の identity を指定することもでき、
この場合すべての identity が順に試されます。
複数の
.Cm IdentityFile
が指定された場合、これは試す identity の一覧に追加されます
(このふるまいは他の設定項目とは異なるものです)。
.Pp
.Cm IdentityFile
は
.Cm IdentitiesOnly
と組み合わせることによって、エージェントが認証時に
どの identity を提供するかを選択することができます。
.Cm IdentityFile
は
.Cm CertificateFile
と組み合わせて、その秘密鍵の認証で使われる
証明書を指定することもできます。
.It Cm IgnoreUnknown (不明な項目を無視)
設定ファイルを解析する際に不明な項目がある場合、
それらを無視するパターンのリストを指定します。
この項目は、
.Nm
に
.Xr ssh 1
によって認識されない項目がある場合のエラーを防ぐのに使われます。
.Cm IgnoreUnknown
項目は、これ以前に現れた項目には反応しないため、
この項目は設定ファイルの最初に書いておくことを推奨します。
.It Cm Include (インクルード)
指定された設定ファイルをインクルードします。
複数のパス名を指定することもでき、各パス名に
.Xr glob 3
ワイルドカードを使うこともできます。
ユーザの設定ファイルに対しては、ホームディレクトリを表す文字として
シェル同様に
.Dq ~
が使えます。
絶対パス名でないファイル名は、ユーザ設定ファイルの場合は
.Pa ~/.ssh
以下のパスを指すと解釈され、システム設定ファイルの場合は
.Pa /etc/ssh
以下のパスを指すと解釈されます。
.Cm Include
指令は
.Cm Match
または
.Cm Host
指定の中に書くこともでき、
その場合は条件によってインクルードされるかどうかが決まります。
.It Cm IPQoS (QoS指定)
接続における IPv4 type-of-service または DSCP クラスを指定します。
可能な値は
.Dq af11 ,
.Dq af12 ,
.Dq af13 ,
.Dq af21 ,
.Dq af22 ,
.Dq af23 ,
.Dq af31 ,
.Dq af32 ,
.Dq af33 ,
.Dq af41 ,
.Dq af42 ,
.Dq af43 ,
.Dq cs0 ,
.Dq cs1 ,
.Dq cs2 ,
.Dq cs3 ,
.Dq cs4 ,
.Dq cs5 ,
.Dq cs6 ,
.Dq cs7 ,
.Dq ef ,
.Dq lowdelay ,
.Dq throughput ,
.Dq reliability 
または数値のいずれかです。
このオプションには 1つあるいは2つの引数を空白で区切って与えることができます。
引数が 1つ指定された場合、これはパケットクラスを無条件に指定します。
引数が 2つ指定された場合、最初の引数は対話的セッションで使われ、
2番目の引数は非対話的セッションで使われます。
デフォルト値は、対話的セッションのときは
.Dq lowdelay
であり、非対話的セッションのときは
.Dq throughput
となっています。
.It Cm KbdInteractiveAuthentication (キーボード対話的認証)
キーボード対話的認証を使用するかどうかを指定します。
このキーワードの引数は
.Dq yes
または
.Dq no
です。デフォルトは
.Dq yes
です。
.It Cm KbdInteractiveDevices (キーボード対話デバイス)
keyboard-interactive 認証で使われる入力方法を指定します。
複数の入力方法を指定する場合は、カンマで区切ってください。
デフォルトではサーバが提供した方法の一覧を使用します。
どの方法が使用できるかは、サーバのサポートによります。
OpenSSH サーバの場合、これは以下の組み合わせになります:
.Dq bsdauth 、
.Dq pam 、
および
.Dq skey 。
.It Cm KexAlgorithms (鍵交換アルゴリズム)
利用可能な KEX (Key Exchange、鍵交換) アルゴリズムを指定します。
複数のアルゴリズムはカンマで区切ってください。
あるいは指定された値が
.Sq +
文字から始まっている場合、この鍵交換方式はデフォルトの方式を
置き換えるのではなく、追加されます。
デフォルトは:
.Bd -literal -offset indent
curve25519-sha256@libssh.org,
ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,
diffie-hellman-group-exchange-sha256,
diffie-hellman-group-exchange-sha1,
diffie-hellman-group14-sha1
.Ed
.Pp
.Xr ssh 1
の
.Fl Q
オプションに引数
.Dq kex
を指定して使うと、サポートされている鍵交換方式の一覧を見ることができます。
.It Cm LocalCommand (ローカルで実行するコマンド)
サーバへのログインが成功したあとにローカルマシン上で実行する
コマンドを指定します。この行の終端までがコマンド文字列とみなされ、
これはそのユーザのシェルによって実行されます。
コマンド文字列では、以下のようなエスケープ文字が使用できます:
.Ql %d
(ローカル側でのホームディレクトリ),
.Ql %h
(リモート側でのホームディレクトリ),
.Ql %l
(ローカル側のホスト名),
.Ql %n
(コマンドラインで指定されたホスト名),
.Ql %p
(リモート側のポート),
.Ql %r
(リモート側のユーザ名) 
.Ql %u
(ローカル側のユーザ名)
あるいは、%l%h%p%r を連結したハッシュ値である
.Ql \&%C
.Pp
このコマンドは同期的に実行され、これを実行する
.Xr ssh 1
のセッションにアクセスすることはできません。
これは、対話的なコマンドに使われるべきではありません。
.Pp
.Cm PermitLocalCommand
が許可されていない場合、この項目は無視されます。
.It Cm LocalForward (ローカル→リモート転送)
ローカルマシンの TCP ポートを、安全な通信路を経由して
リモートマシン上から与えられた host:port に転送するよう指示します
(訳注: -L オプションと同じ)。
最初の引数は
.Sm off
.Oo Ar bindするアドレス : Oc Ar ポート
.Sm on
であり、2 番目の引数は
.Ar ホスト名 : Ns Ar ホスト側ポート
で指定します。
IPv6 アドレスは、ブラケット [ ] で囲むことにより指定します。
ポート転送は複数指定することができ、
コマンドラインから追加指定することもできます。
特権ポートを転送できるのはスーパーユーザだけです。
デフォルトでは、ローカル側のポートは
.Cm GatewayPorts
の設定に従って bind されますが、
.Ar bindするアドレス
を明示的に指定することで、特定のアドレスに接続をふり向けることができます。
.Ar bindするアドレス
として
.Dq localhost
を指定すると、ポートを listen するのはローカルな使用のみに限ることになります。
いっぽう、空のアドレスまたは
.Sq *
を指定すると、そのポートはすべてのインターフェイスに対して使用可能になります。
.It Cm LogLevel (ログレベル)
.Xr ssh 1
が出力するログの冗長性のレベルを指定します。
とりうる値は次のとおりです:
QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2
および DEBUG3。
デフォルトでは INFO になっています。DEBUG と DEBUG1 は等価です。
DEBUG2、DEBUG3 はそれぞれさらに冗長なログになります。
.It Cm MACs (メッセージ認証コード)
使用する MAC (メッセージ認証コード) 方式の優先順位を指定します。
MAC 方式はデータの改竄を防ぐ機構 (data integrity protection) で、
複数の方式をカンマで区切って指定します。
指定された値が
.Sq +
文字から始まっている場合、このMAC方式はデフォルトの方式を
置き換えるのではなく、追加されます。
.Pp
名前に
.Dq -etm
を含む方式では、MAC 値を暗号化のあとに計算します (encrypt-then-mac)。
こちらのほうが安全であると考えられており、推奨されています。
.Pp
デフォルトは:
.Bd -literal -offset indent
umac-64-etm@openssh.com,umac-128-etm@openssh.com,
hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,
hmac-sha1-etm@openssh.com,
umac-64@openssh.com,umac-128@openssh.com,
hmac-sha2-256,hmac-sha2-512,hmac-sha1
.Ed
の順になっています。
.Pp
.Xr ssh 1
の
.Fl Q
オプションに引数
.Dq mac
を指定して使うと、サポートされているMAC方式の一覧を見ることができます。
.It Cm NoHostAuthenticationForLocalhost (localhostでのホスト認証を抑制)
この項目はホームディレクトリがマシン間で共有されているときに
使います。このような状況ではそれぞれ別々のマシンで localhost の指す
ホストが異なっているため、ユーザはホスト鍵が変わったという警告を
受けてしまいます (訳注: 別々のホスト鍵をもつマシンで同一の localhost 
ホスト鍵が共有されているため)。この項目を使うと、相手が
localhost のときにはホスト間認証を抑制することができます。
この引数がとりうる値は
.Dq yes
あるいは
.Dq no
です。
デフォルトでは、相手が localhost でも鍵をチェックするようになっています。
.It Cm NumberOfPasswordPrompts (パスワード試行回数)
パスワードを最高何回まで訊くかを指定します。
この回数を超えると認証は失敗します。
このキーワードには整数を指定する必要があります。
デフォルト値は 3 です。
.It Cm PasswordAuthentication (パスワード認証)
パスワード認証をおこなうかどうかを指定します。この引数の値は
.Dq yes
または
.Dq no
です。デフォルトでは
.Dq yes (パスワード認証をおこなう)
になっています。
.It Cm PermitLocalCommand (ローカルなコマンド実行許可)
.Ic LocalCommand
設定項目か、あるいは
.Xr ssh 1
の
.Ic !\& Ns Ar コマンド
エスケープシーケンスを使ったローカルなコマンド実行を許可します。
引数の値は
.Dq yes
あるいは
.Dq no
でなければならず、デフォルトは
.Dq no
です。
.It Cm PKCS11Provider (PKCS11プロバイダ)
どの PKCS#11 プロバイダを使うかを指定します。
この項目の引数は、
.Xr ssh 1
が使用する PKCS#11 共有ライブラリで、ユーザの RSA秘密鍵を
提供する PKCS#11 トークンと通信するために使われます。
.It Cm Port (ポート番号)
リモートホストに接続するときのポート番号を指定します。
デフォルトのポートは 22 です。
.It Cm PreferredAuthentications (認証の優先順位)
クライアントが試みる認証の優先順位を指定します。
これによって、クライアントは特定の認証 (
.Cm keyboard-interactive 
など) をそれ以外の認証 (
.Cm password 
など) よりも優先して選ぶことができます。
デフォルトは
.Bd -literal -offset indent
gssapi-with-mic,hostbased,publickey,
keyboard-interactive,password
.Ed
になっています。
.It Cm Protocol (プロトコル)
.Xr ssh 1
がサポートすべきプロトコルのバージョンの優先順位を指定します。
とりうる値は
.Sq 1
と
.Sq 2
です。
複数のバージョンを
指定するときはカンマで区切ってください。
この値を
.Dq 2,1
のようにすると、
.Nm ssh
はまず始めにバージョン 2 がサポートされているかどうかを調べ、
サーバがそれをサポートしていなかった場合に
バージョン 1 を使用します。
(訳注: もしサーバ側がバージョン 2 の認証をサポートしていた場合、
バージョン 2 での認証に失敗すると ssh は
そこで終了します。バージョン 1 の認証は *おこなわない* ため、
注意してください)
デフォルトは
.Sq 2 
です。
プロトコル バージョン 1 にはいくつもの暗号上の弱点があり、
使うべきではありません。
これはレガシー・デバイスのサポート用のみに提供されています。
.It Cm ProxyCommand (プロキシ コマンド)
サーバに接続するのに使用するコマンドを指定します。
コマンド文字列はこのキーワード以後、行末まで書くことができます。
コマンド文字列は、そのユーザのシェルによって実行されます。
このとき、実行後にシェルが残らないように
.Ql exec
指令が使われます。
.Pp
コマンド文字列では、
.Ql %h
は接続するホスト名に置換され、
.Ql %p
はポートに置換され、
.Ql %r
はリモートのユーザ名に置換されます。
コマンドは基本的に何でもよいのですが、標準入力から読み込み、
標準出力に書き込むようなものである必要があります。
これは最終的にサーバマシン上で動いている
.Xr sshd 8
に接続するか、どこか別の場所で
.Ic sshd -i
を起動させるようにします。
ホスト鍵の管理は接続されているホストの
HostName を使っておこなわれます (デフォルトでは、これはユーザが
タイプした名前になります)。このコマンドを
.Dq none
に設定すると、このオプションは完全に使用禁止になります。
プロキシ コマンドを使うと、
.Cm CheckHostIP (ホスト IP アドレスの検査)
は使用できませんので注意してください。
.Pp
この設定項目は、
.Xr nc 1
のプロキシ・サポートと組み合わせて使うのに有用です。
たとえば、以下の設定では 192.0.2.0 の HTTP プロキシ経由で接続します:
.Bd -literal -offset 3n
ProxyCommand /usr/bin/nc -X connect -x 192.0.2.0:8080 %h %p
.Ed
.It Cm ProxyJump (プロキシ・ジャンプ)
ひとつあるいは複数のジャンプ・プロキシを
.Xo
.Sm off
.Op Ar ユーザ No @
.Ar ホスト
.Op : Ns Ar ポート
.Sm on
.Xc
の形式で指定します。
カンマで区切って、複数のプロキシを指定することもできます。
これらは順に到達されます。
この設定項目を指定すると、
.Xr ssh 1
はまず
.Cm ProxyJump
対象ホストに
.Xr ssh 1
で接続し、そこから最終的なホストに対して
ポート転送を確立します。
.Pp
注意: この設定項目は
.Cm ProxyCommand
と衝突することに注意してください。
どちらか最初に指定された方が有効になり、
あとの指定は効果がなくなります。
.It Cm ProxyUseFdpass (プロキシでファイル記述子を使用)
接続中のファイル記述子を
.Cm ProxyCommand
がそのまま実行を続けて渡すのではなく、
.Xr ssh 1
に戻すよう指示します。
デフォルトは
.Dq no 
になっています。
.It Cm PubkeyAcceptedKeyTypes (使用する公開鍵の形式)
公開鍵認証のさいに使用される鍵の形式をカンマで区切って指定します。
指定された値が
.Sq +
文字から始まっている場合、デフォルトの形式を
置き換えるのではなく、追加されます。
この項目のデフォルト値は以下のとおりです:
.Bd -literal -offset 3n
ecdsa-sha2-nistp256-cert-v01@openssh.com,
ecdsa-sha2-nistp384-cert-v01@openssh.com,
ecdsa-sha2-nistp521-cert-v01@openssh.com,
ssh-ed25519-cert-v01@openssh.com,
ssh-rsa-cert-v01@openssh.com,
ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
ssh-ed25519,ssh-rsa
.Ed
.Pp
現在サポートされている鍵の形式一覧を見るには、
.Xr ssh 1
の
.Fl Q
オプションを使います。
.It Cm PubkeyAuthentication (公開鍵認証)
公開鍵認証をおこなうかどうかを指定します。
このキーワードの引数は
.Dq yes
か
.Dq no
のどちらかです。
デフォルトでは
.Dq yes (公開鍵認証をおこなう)
になっています。
.It Cm RekeyLimit (rekey の制限)
セッション鍵が再生成される (rekey) までに
許される最大のデータ量を指定します。
また、鍵が再生成されるまでの最大の時間も指定できます。
第1引数の値はバイト数で指定し、サフィックスとして
.Sq K
、
.Sq M
、あるいは
.Sq G
を使うことができます。
それぞれ、キロバイト(K)、メガバイト(M)、ギガバイト(G) を表します。
デフォルトは暗号方式によりますが
.Sq 1G
から
.Sq 4G
までの間です。
第2引数はオプションで、ここには再生成までの時間を
.Xr sshd_config 5 
「時間の表現」セクションにある形式で指定できます。
.Cm RekeyLimit
のデフォルト値は
.Dq default none 
で、これは鍵の再生成がその暗号アルゴリズムのデフォルト値で
許されるデータ量だけ送信または受信したときにおこなわれることを示し、
時間による再生成はおこなわないことを意味します。
.It Cm RemoteForward (リモート→ローカル転送)
リモートマシン上の TCP ポートを、安全な通信路を経由して
ローカルマシン上から与えられた host:post に転送するよう指示します
(訳注: -R オプションと同じ)。
最初の引数は
.Oo Ar bindするアドレス : Oc Ar ポート
であり、2 番目の引数は
.Ar ホスト名 : Ns Ar ホスト側ポート
で指定します。
IPv6 アドレスは、ブラケット [ ] で囲むことにより指定します。
ポート転送は複数指定することができ、
コマンドラインから追加指定することもできます。
特権ポートを転送できるのは、そのリモートホスト上に root としてログインできるときだけです。
.Pp
.Ar ポート
引数が
.Ql 0
の場合、listen するポートはサーバ側で動的に割り当てられ、
実行時にクライアント側にその値が報告されます。
.Pp
デフォルトでは、サーバ側で listen するソケットは
ループバックインターフェイスにのみ bind されます。
これは
.Ar bindするアドレス
を指定することによって上書きすることができます。
空の
.Ar bindするアドレス
または
.Ql *
をアドレスとして指定すると、サーバ側のソケットは
すべてのインターフェイスに対して listen するようになります。
.Ar bindするアドレス
にループバック以外の値が指定できるのは、
.Cm GatewayPorts
設定項目が許可されているときのみです (
.Xr sshd_config 5
を参照してください)。
.It Cm RequestTTY (TTYの要求)
セッションに対して、仮想端末 (TTY) を要求するかどうかを指定します。
とりうる引数の値は
.Dq no
(TTYを要求しない)、
.Dq yes
(標準入力がTTYの場合はTTYを要求する)、
.Dq force
(つねにTTYを要求する)、
あるいは
.Dq auto
(ログインセッションのときにTTYを要求する)
となっています。この項目は、
.Xr ssh 1 
における
.Fl t
および
.Fl T
オプションに対応しています。
.It Cm RevokedHostKeys (失効した鍵)
失効したホスト公開鍵を指定します。
このファイル中に含まれる鍵はホスト認証時に拒否されます。
注意: 指定したファイルが存在しない場合、あるいは
そのファイルが読み込み不可能な場合は、
すべてのホストに対してホスト認証が拒否されます。
鍵の一覧はテキストファイルとして、1行ごとに1つずつの鍵を指定するか、
あるいは
.Xr ssh-keygen 1
によって生成される OpenSSH 鍵失効リスト (Key Revocation List, KRL) を
指定することもできます。
KRLの詳細については、
.Xr ssh-keygen 1
の「鍵失効リスト (Key Revocation List)」の項を参照してください。
.It Cm RhostsRSAAuthentication (rhosts-RSA 認証)
RSA ホスト認証を使った rhosts ベースの認証を試みるかどうかを
指定します。
この引数の値は
.Dq yes
または
.Dq no
です。
デフォルトの値は
.Dq no (rhosts-RSA 認証をおこなわない)
です。
この設定項目はプロトコル バージョン 1 にのみ適用されます。
このオプションを使うには
.Xr ssh 1
を setuid root にしておくことが必要です。
.It Cm RSAAuthentication (RSA 認証)
RSA 認証を使うかどうかを指定します。
この引数の値は
.Dq yes
または
.Dq no
です。RSA 認証は identity ファイルが存在するときか、
認証エージェントが動いているときのみ使用されます。
デフォルトは
.Dq yes (RSA 認証をおこなう)
です。この設定項目は
プロトコル バージョン 1 にしか適用されないので注意してください。
.It Cm SendEnv (環境変数を送信)
ローカルな環境変数
(
.Xr environ 7
) のうち、どれをサーバに送信すべきかを設定します。
注意: 環境変数の受け渡しがサポートされているのは、
サーバがこれをサポートするようになっており、
なおかつそれらの環境変数を許可するよう設定されているときだけです。
注意:
.Ev TERM
環境変数は、プロトコルによる規定で、
仮想端末を必要とする場合にはつねに送信されます。
サーバ側の設定については、
.Xr sshd_config 5
にある
.Cm AcceptEnv
を参照してください。
変数は名前によって指定されます。
この名前にはワイルドカード文字を含むことができます。
複数の環境変数を指定する場合は空白によって区切るか、
複数の
.Cm SendEnv
項目を指定することができます。
デフォルトでは、どの環境変数も送られないようになっています。
.Pp
ワイルドカード文字の詳細については
.Sx パターン
を参照してください。
.It Cm ServerAliveCountMax (サーバ生存カウント最大値)
.Xr ssh 1
がサーバからの返答を確認するまでに、サーバ生存確認メッセージ (下記参照)
を何回まで送るかを指定します。
この回数が指定された数値を超えると、
ssh はサーバ側との接続を切断し、セッションを終了させます。
重要なのは、サーバ生存確認メッセージは以下に記されている
.Cm TCPKeepAlive
とはまったく違うということです。
サーバ生存確認メッセージは暗号化された通信路を経由して送られるので、
偽装可能ではありません。これに対して、
.Cm TCPKeepAlive
で指定される TCP の keepalive オプションは偽装が可能です。
このサーバ生存確認の機構は、クライアントまたはサーバ側が、
いつ接続が切れたかを知りたいときに有用です。
.Pp
このデフォルト値は、 3 です。たとえばもし、
.Cm ServerAliveInterval
(下記) が 15 に設定されており、
.Cm ServerAliveCountMax
がデフォルトのままだったとしたら、ssh は
サーバが応答しなくなった後およそ 45 秒後に接続を切断します。
.It Cm ServerAliveInterval (サーバ生存確認の間隔)
一定期間サーバからデータが送られてこないときに、
タイムアウトする秒数を設定します。この場合
.Xr ssh 1
は暗号化された通信路を介してサーバ側に
返答を要求するメッセージを送ります。
デフォルトは 0 で、これはこのようなメッセージをサーバ側に送らないことを指示しています。
.It Cm StreamLocalBindMask (Unixドメインソケット作成時のマスク)
ローカルまたはリモートのポート転送のさいに、
Unixドメインソケットファイルを作成する時の
.Pq umask
値を指定します。
この設定項目は Unixドメインソケットファイルに対して
ポート転送をおこなう時にのみ有効です。
.Pp
デフォルトの値は 0177 であり、これは作成された Unixドメインソケットが
所有者にのみ読み書き可能であることを示しています。
注意: すべてのオペレーティングシステムが Unixドメインソケットの
ファイルモードに従うわけではありません。
.It Cm StreamLocalBindUnlink (Unixドメインソケットを削除する)
ローカルまたはリモートのポート転送で、
新しい Unixドメインソケットファイルを作成するさいに
既存のソケットファイルを削除するかどうかを指定します。
もしソケットファイルがすでに存在し、
.Cm StreamLocalBindUnlink
が有効となっていない場合、
.Nm ssh
はその Unixドメインソケットに対してポート転送をおこなうことができません。
この設定項目は Unixドメインソケットファイルに対して
ポート転送をおこなう時にのみ有効です。
.Pp
とりうる引数は
.Dq yes
または
.Dq no 
で、デフォルトは
.Dq no 
になっています。
.It Cm StrictHostKeyChecking (厳格なホスト鍵チェック)
この設定項目が
.Dq yes
に設定されている場合、
.Xr ssh 1
は決して
.Pa ~/.ssh/known_hosts
ファイルに自動的にホスト認証鍵を追加しません。
鍵が変更されているホストへの接続は拒否されます。
これはトロイの木馬攻撃に対する最大の防御となりますが、
.Pa /etc/ssh/ssh_known_hosts
ファイルをきちんと更新していなかったり、新規のホストに頻繁に
接続するような状況だと邪魔になるかもしれません。
このオプションを使うとユーザは手で新しいホストの鍵を
追加しなければならなくなります。
この設定項目が
.Dq no
に設定されている場合、
ssh は新しいホスト鍵をユーザの known_hosts ファイルに
自動的に追加します。
この設定項目が
.Dq ask
に設定されていると、
新しいホスト鍵が追加されるのは、ユーザが
本当にそれを望んでいると確認できたときだけになります。
ホスト鍵が変更されているホストへの接続は拒否されます。
known_hosts ファイルに含まれているホスト鍵は
いかなる場合でも自動的に検査されます。
この設定項目がとりうる値は
.Dq yes
、
.Dq no
あるいは
.Dq ask
で、デフォルトは
.Dq ask
です。
.It Cm TCPKeepAlive (TCP接続を生かしておく)
システムが相手のマシンに TCP keepalive メッセージを送るかどうかを
指定します。これが送られると、接続の異常終了や相手マシンの
クラッシュが正しく通知されるようになります。
しかしこれを使うと、たとえ経路が一時的にダウンしていても
接続が死んでいるということになってしまい、これが邪魔になる場合もあります。
.Pp
デフォルトは
.Dq yes (TCP keepalive メッセージを送る)
です。そのため
クライアントはネットワークがダウンするか、
リモートホストが落ちると通知してきます。
これはスクリプト中では重要であり、多くのユーザもこれを望んでいます。
.Pp
TCP Keepalive メッセージを禁止するには、この値を
.Dq no
にする必要があります。
.It Cm Tunnel (トンネリングの指定)
クライアントとサーバ間で
.Xr tun 4
デバイスの転送を要求します。
とりうる値は
.Dq yes
、
.Dq point-to-point
(layer 3)、
.Dq ethernet
(layer 2)
あるいは
.Dq no 
です。
.Dq yes
を指定するとデフォルトのトンネリング方法として
.Dq point-to-point
を使用します。
デフォルトでは
.Dq no
になっています。
.It Cm TunnelDevice (トンネリングするデバイス)
トンネリングに使う
.Xr tun 4
デバイスをクライアント側で
.Pq Ar ローカルtun
に、サーバ側で
.Pq Ar リモートtun
に強制的に指定します。
.Pp
この引数は
.Sm off
.Ar ローカルtun Op : Ar リモートtun
.Sm on
の形である必要があります。
デバイス名にはインターフェイス番号か、キーワード
.Dq any 
を指定します。これを指定すると
次に使用可能なデバイスが選択されることになります。
.Ar リモートtun
が指定されない場合、これは
.Dq any 
とみなされます。
この設定項目のデフォルト値は
.Dq any:any
です。
.It Cm UpdateHostKeys (ホスト鍵を更新する)
.Xr ssh 1
がサーバの送信する、追加のホスト鍵の通知を受け付けるかどうかを指定します。
この通知は認証が完了したあとに送られ、受けとった鍵は
.Cm UserKnownHostsFile
に追加されます。
とりうる引数は
.Dq yes 、
.Dq no
(デフォルト) あるいは
.Dq ask
です。
この項目を許可しておくと、あるサーバに対する代替のホスト鍵を学習することができるため、
サーバが古い鍵を削除するときにスムーズにホスト鍵の移行をおこなうことができます。
追加のホスト鍵は、この鍵で認証したホストがすでに信頼されている場合か、
あるいはユーザが明示的に許可した場合にのみ受け入れられます。
.Cm UpdateHostKeys
の値を
.Dq ask
に設定すると、ユーザは known_hosts ファイルを修正する際には
確認を求められます。現在のところ、この確認処理は
.Cm ControlPersist
とは互換性がないため、ControlPersistが許可されている場合には
こちらの項目は禁止されます。
.Pp
いまのところ、
OpenSSH 6.8 あるいはそれ以降の
.Xr sshd 8
のみが
.Dq hostkeys@openssh.com
プロトコル拡張をサポートしており、クライアントがサーバから
すべてのホスト鍵を受けとることができるようになっています。
.It Cm UsePrivilegedPort (特権ポートを使用する)
外に向けての接続をおこなうときに、
特権ポートを使用するかどうかを指定します。この引数の値は
.Dq yes
または
.Dq no
で、デフォルトは
.Dq no
になっています。
.Dq yes
に設定した場合、
.Xr ssh 1
は setuid root である必要があります。
注意:
旧式の sshd に対して
.Cm RhostsRSAAuthentication
認証が必要な場合は、この設定項目を
.Dq yes
にする必要があります。
.It Cm User (ユーザ)
ログインするユーザ名を指定します。これは異なるマシン上で
異なるユーザ名が使われている場合に便利です。
これでコマンドラインからわざわざユーザ名を与えなくてもすみます。
.It Cm UserKnownHostsFile (個人用 known_hosts ファイル)
ホスト鍵データベースとして使うファイルを空白で区切って指定します。
デフォルトでは
.Pa ~/.ssh/known_hosts
.Pa ~/.ssh/known_hosts2
になっています。
.It Cm VerifyHostKeyDNS (DNSでホスト鍵を確認する)
DNS と SSHFP 資源レコードを使って、
リモートホストの公開鍵を検証するかどうかを指定します。
この設定項目が
.Dq yes
に設定されていると、クライアントは暗黙のうちに
DNS 上の安全な指紋に一致する鍵を信頼するようになります。
安全でない指紋については、この設定項目を
.Dq ask
とすることによって扱います。
この設定項目が
.Dq ask
に設定されていると、一致した指紋に関する情報が表示されますが、
それでもユーザは
.Cm StrictHostKeyChecking
設定項目に従って新しいホスト鍵を確認しなければなりません。
この設定項目がとりうる値は
.Dq yes 
、
.Dq no
あるいは
.Dq ask 
です。デフォルトでは
.Dq no
になっています。
.Pp
.Xr ssh 1
の
「ホスト鍵の検証」も参照してください。
.It Cm VisualHostKey (視覚的なホスト鍵)
この項目が
.Dq yes 
に設定されている場合、ホスト鍵が未知であるマシンにログインしようとした時、
通常のリモートホストの鍵の指紋に加えて、
これをアスキーアートで表現したものが表示されます。
この項目が
.Dq no 
の場合は、ホスト鍵が未知であるマシンにログインしようとした時に
指紋のみが表示されます。
デフォルトは
.Dq no 
です。
.It Cm XAuthLocation (xauth の位置)
.Xr xauth 1
プログラムのフルパス名を指定します。デフォルトは
.Pa /usr/X11R6/bin/xauth
です。
.El
.Sh パターン
.Em パターン
は、0 個以上の非空白文字か、
.Sq *
(0 個または以上の任意の文字に一致する)
あるいは
.Sq ?\&
(任意の 1 文字だけに一致する)
によって構成されます。たとえば、
.Dq .co.uk
ドメインの任意のホストに適用される宣言を指定したい場合には、
以下のようなパターンが使えます:
.Pp
.Dl Host *.co.uk
.Pp
以下のパターンはアドレス範囲が 192.168.0.[0-9] にある
任意のホストに一致します:
.Pp
.Dl Host 192.168.0.?
.Pp
.Em パターン列
はカンマ (,) で区切られたパターンの列をさします。
パターン列中の各パターンは、先頭に感嘆符
.Pq Sq !\&
をつけることによって否定を表すことができます。
たとえば、ある組織内の
.Dq dialup
プール以外から接続してきた場合に鍵の使用を許可する場合、
(authorized_keys ファイルで) 以下のようなエントリを使うことができます:
.Pp
.Dl from=\&"!*.dialup.example.com,*.example.com\&"
.Sh 関連ファイル
.Bl -tag -width Ds
.It Pa ~/.ssh/config
ユーザごとの個人用設定ファイルです。
ファイル形式は上で説明されています。
このファイルは SSH クライアントによって使われます。
このファイルは潜在的に悪用される危険性があるため、
パーミッションは厳しくしておくのがいいでしょう。
所有者のみが読み書き可能で、他からはアクセスできないようにしておくべきです。
.It Pa /etc/ssh/ssh_config
システム全体にわたる設定ファイルです。このファイルはユーザの設定
ファイルでは指定されなかった値を提供し、また設定ファイルを
持たないユーザのためのデフォルトにもなります。このファイルは
誰にでも読み込み可能でなければいけません。
.El
.Sh 関連項目
.Xr ssh 1
.Sh 作者
OpenSSH は Tatu Ylonen による、フリーな
オリジナル版 ssh 1.2.12 リリースから派生したものです。
Aaron Campbell、 Bob Beck、 Markus Friedl、 Niels Provos、
Theo de Raadt および Dug Song が多くのバグを取り除き、
新しい機能をふたたび追加して OpenSSH をつくりました。
SSH プロトコル バージョン 1.5 および 2.0 のサポートは
Markus Friedl の貢献によるものです。
